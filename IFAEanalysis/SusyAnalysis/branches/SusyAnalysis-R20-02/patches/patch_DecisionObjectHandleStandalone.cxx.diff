Index: TrigDecisionTool/Root/DecisionObjectHandleStandalone.cxx
===================================================================
--- TrigDecisionTool/Root/DecisionObjectHandleStandalone.cxx	(revision 643677)
+++ TrigDecisionTool/Root/DecisionObjectHandleStandalone.cxx	(working copy)
@@ -3,28 +3,45 @@
 
 using namespace Trig;
 
+// Initialize the object holder.
+// We are running under RootCore - a ROOT environment. As a result the
+// navagation and decision objects's lifetime are handled by ROOT.
 DecisionObjectHandleStandalone::DecisionObjectHandleStandalone(EventPtr sg, const std::string& deckey, const std::string& navikey)
   : m_sg(sg), m_deckey(deckey), m_navikey(navikey), m_decision(0), m_navigation(0) {
 }
 
-xAOD::TrigDecision const * DecisionObjectHandleStandalone::getDecision() const {
-  if ( !m_decision ) {
-   m_sg->retrieve(m_decision,m_deckey); 
-    if(!m_decision){
-      ATH_MSG_WARNING("problems retrieving TrigDecision");
-      return 0;
+namespace {
+  // Helper function to fetch from the backing store if it isn't already there.
+  // Return null if we can't find it at all. Failure only if the data seems to be there
+  // but we can't fetch it for some reason.
+  template<class T> StatusCode fetchObjectWithNullOK(const EventPtr sg, const T* &objectHolder, const std::string& keyName) {
+    if (objectHolder != 0) {
+      return StatusCode::SUCCESS;
     }
+
+    if (!sg->contains<T>(keyName)) {
+      return StatusCode::SUCCESS;
+    }
+
+    return sg->retrieve(objectHolder, keyName);
   }
+}
+
+// Get the decision object back.
+// The caller must be able to handle a null.
+// TODO: We will call contains repeatedly if the object is missing.
+xAOD::TrigDecision const * DecisionObjectHandleStandalone::getDecision() const {
+  if (!fetchObjectWithNullOK(m_sg, m_decision, m_deckey).isSuccess()) {
+    ATH_MSG_ERROR("Unable to load a TrigDecision object when it is in the data stream!");
+  }
   return m_decision;
 }
 
+// Get the navagation object back.
+// The caller must be able to handle a null.
 xAOD::TrigNavigation const * DecisionObjectHandleStandalone::getNavigation() const {
-  if ( !m_navigation ) {
-   m_sg->retrieve(m_navigation,m_navikey); 
-    if(!m_navigation){
-      ATH_MSG_WARNING("problems retrieving TrigNavigation");
-      return 0;
-    }
+  if (!fetchObjectWithNullOK(m_sg, m_navigation, m_navikey).isSuccess()) {
+    ATH_MSG_ERROR("Unable to load a TrigNavagation object when it is in the data stream!");
   }
   return m_navigation;
 }
